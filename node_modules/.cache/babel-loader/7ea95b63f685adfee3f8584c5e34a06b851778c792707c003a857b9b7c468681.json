{"ast":null,"code":"/**\r\n * Isotope LayoutMode\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['get-size/get-size', 'outlayer/outlayer'], factory);\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('get-size'), require('outlayer'));\n  } else {\n    // browser global\n    window.Isotope = window.Isotope || {};\n    window.Isotope.LayoutMode = factory(window.getSize, window.Outlayer);\n  }\n})(window, function factory(getSize, Outlayer) {\n  'use strict';\n\n  // layout mode class\n  function LayoutMode(isotope) {\n    this.isotope = isotope;\n    // link properties\n    if (isotope) {\n      this.options = isotope.options[this.namespace];\n      this.element = isotope.element;\n      this.items = isotope.filteredItems;\n      this.size = isotope.size;\n    }\n  }\n  var proto = LayoutMode.prototype;\n\n  /**\r\n   * some methods should just defer to default Outlayer method\r\n   * and reference the Isotope instance as `this`\r\n  **/\n  var facadeMethods = ['_resetLayout', '_getItemLayoutPosition', '_manageStamp', '_getContainerSize', '_getElementOffset', 'needsResizeLayout', '_getOption'];\n  facadeMethods.forEach(function (methodName) {\n    proto[methodName] = function () {\n      return Outlayer.prototype[methodName].apply(this.isotope, arguments);\n    };\n  });\n\n  // -----  ----- //\n\n  // for horizontal layout modes, check vertical size\n  proto.needsVerticalResizeLayout = function () {\n    // don't trigger if size did not change\n    var size = getSize(this.isotope.element);\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var hasSizes = this.isotope.size && size;\n    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;\n  };\n\n  // ----- measurements ----- //\n\n  proto._getMeasurement = function () {\n    this.isotope._getMeasurement.apply(this, arguments);\n  };\n  proto.getColumnWidth = function () {\n    this.getSegmentSize('column', 'Width');\n  };\n  proto.getRowHeight = function () {\n    this.getSegmentSize('row', 'Height');\n  };\n\n  /**\r\n   * get columnWidth or rowHeight\r\n   * segment: 'column' or 'row'\r\n   * size 'Width' or 'Height'\r\n  **/\n  proto.getSegmentSize = function (segment, size) {\n    var segmentName = segment + size;\n    var outerSize = 'outer' + size;\n    // columnWidth / outerWidth // rowHeight / outerHeight\n    this._getMeasurement(segmentName, outerSize);\n    // got rowHeight or columnWidth, we can chill\n    if (this[segmentName]) {\n      return;\n    }\n    // fall back to item of first element\n    var firstItemSize = this.getFirstItemSize();\n    this[segmentName] = firstItemSize && firstItemSize[outerSize] ||\n    // or size of container\n    this.isotope.size['inner' + size];\n  };\n  proto.getFirstItemSize = function () {\n    var firstItem = this.isotope.filteredItems[0];\n    return firstItem && firstItem.element && getSize(firstItem.element);\n  };\n\n  // ----- methods that should reference isotope ----- //\n\n  proto.layout = function () {\n    this.isotope.layout.apply(this.isotope, arguments);\n  };\n  proto.getSize = function () {\n    this.isotope.getSize();\n    this.size = this.isotope.size;\n  };\n\n  // -------------------------- create -------------------------- //\n\n  LayoutMode.modes = {};\n  LayoutMode.create = function (namespace, options) {\n    function Mode() {\n      LayoutMode.apply(this, arguments);\n    }\n    Mode.prototype = Object.create(proto);\n    Mode.prototype.constructor = Mode;\n\n    // default options\n    if (options) {\n      Mode.options = options;\n    }\n    Mode.prototype.namespace = namespace;\n    // register in Isotope\n    LayoutMode.modes[namespace] = Mode;\n    return Mode;\n  };\n  return LayoutMode;\n});","map":{"version":3,"names":["window","factory","define","amd","module","exports","require","Isotope","LayoutMode","getSize","Outlayer","isotope","options","namespace","element","items","filteredItems","size","proto","prototype","facadeMethods","forEach","methodName","apply","arguments","needsVerticalResizeLayout","hasSizes","innerHeight","_getMeasurement","getColumnWidth","getSegmentSize","getRowHeight","segment","segmentName","outerSize","firstItemSize","getFirstItemSize","firstItem","layout","modes","create","Mode","Object","constructor"],"sources":["C:/laragon/www/codes/porto-2/node_modules/isotope-layout/js/layout-mode.js"],"sourcesContent":["/**\r\n * Isotope LayoutMode\r\n */\r\n\r\n( function( window, factory ) {\r\n  // universal module definition\r\n  /* jshint strict: false */ /*globals define, module, require */\r\n  if ( typeof define == 'function' && define.amd ) {\r\n    // AMD\r\n    define( [\r\n        'get-size/get-size',\r\n        'outlayer/outlayer'\r\n      ],\r\n      factory );\r\n  } else if ( typeof module == 'object' && module.exports ) {\r\n    // CommonJS\r\n    module.exports = factory(\r\n      require('get-size'),\r\n      require('outlayer')\r\n    );\r\n  } else {\r\n    // browser global\r\n    window.Isotope = window.Isotope || {};\r\n    window.Isotope.LayoutMode = factory(\r\n      window.getSize,\r\n      window.Outlayer\r\n    );\r\n  }\r\n\r\n}( window, function factory( getSize, Outlayer ) {\r\n  'use strict';\r\n\r\n  // layout mode class\r\n  function LayoutMode( isotope ) {\r\n    this.isotope = isotope;\r\n    // link properties\r\n    if ( isotope ) {\r\n      this.options = isotope.options[ this.namespace ];\r\n      this.element = isotope.element;\r\n      this.items = isotope.filteredItems;\r\n      this.size = isotope.size;\r\n    }\r\n  }\r\n\r\n  var proto = LayoutMode.prototype;\r\n\r\n  /**\r\n   * some methods should just defer to default Outlayer method\r\n   * and reference the Isotope instance as `this`\r\n  **/\r\n  var facadeMethods = [\r\n    '_resetLayout',\r\n    '_getItemLayoutPosition',\r\n    '_manageStamp',\r\n    '_getContainerSize',\r\n    '_getElementOffset',\r\n    'needsResizeLayout',\r\n    '_getOption'\r\n  ];\r\n\r\n  facadeMethods.forEach( function( methodName ) {\r\n    proto[ methodName ] = function() {\r\n      return Outlayer.prototype[ methodName ].apply( this.isotope, arguments );\r\n    };\r\n  });\r\n\r\n  // -----  ----- //\r\n\r\n  // for horizontal layout modes, check vertical size\r\n  proto.needsVerticalResizeLayout = function() {\r\n    // don't trigger if size did not change\r\n    var size = getSize( this.isotope.element );\r\n    // check that this.size and size are there\r\n    // IE8 triggers resize on body size change, so they might not be\r\n    var hasSizes = this.isotope.size && size;\r\n    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;\r\n  };\r\n\r\n  // ----- measurements ----- //\r\n\r\n  proto._getMeasurement = function() {\r\n    this.isotope._getMeasurement.apply( this, arguments );\r\n  };\r\n\r\n  proto.getColumnWidth = function() {\r\n    this.getSegmentSize( 'column', 'Width' );\r\n  };\r\n\r\n  proto.getRowHeight = function() {\r\n    this.getSegmentSize( 'row', 'Height' );\r\n  };\r\n\r\n  /**\r\n   * get columnWidth or rowHeight\r\n   * segment: 'column' or 'row'\r\n   * size 'Width' or 'Height'\r\n  **/\r\n  proto.getSegmentSize = function( segment, size ) {\r\n    var segmentName = segment + size;\r\n    var outerSize = 'outer' + size;\r\n    // columnWidth / outerWidth // rowHeight / outerHeight\r\n    this._getMeasurement( segmentName, outerSize );\r\n    // got rowHeight or columnWidth, we can chill\r\n    if ( this[ segmentName ] ) {\r\n      return;\r\n    }\r\n    // fall back to item of first element\r\n    var firstItemSize = this.getFirstItemSize();\r\n    this[ segmentName ] = firstItemSize && firstItemSize[ outerSize ] ||\r\n      // or size of container\r\n      this.isotope.size[ 'inner' + size ];\r\n  };\r\n\r\n  proto.getFirstItemSize = function() {\r\n    var firstItem = this.isotope.filteredItems[0];\r\n    return firstItem && firstItem.element && getSize( firstItem.element );\r\n  };\r\n\r\n  // ----- methods that should reference isotope ----- //\r\n\r\n  proto.layout = function() {\r\n    this.isotope.layout.apply( this.isotope, arguments );\r\n  };\r\n\r\n  proto.getSize = function() {\r\n    this.isotope.getSize();\r\n    this.size = this.isotope.size;\r\n  };\r\n\r\n  // -------------------------- create -------------------------- //\r\n\r\n  LayoutMode.modes = {};\r\n\r\n  LayoutMode.create = function( namespace, options ) {\r\n\r\n    function Mode() {\r\n      LayoutMode.apply( this, arguments );\r\n    }\r\n\r\n    Mode.prototype = Object.create( proto );\r\n    Mode.prototype.constructor = Mode;\r\n\r\n    // default options\r\n    if ( options ) {\r\n      Mode.options = options;\r\n    }\r\n\r\n    Mode.prototype.namespace = namespace;\r\n    // register in Isotope\r\n    LayoutMode.modes[ namespace ] = Mode;\r\n\r\n    return Mode;\r\n  };\r\n\r\n  return LayoutMode;\r\n\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}